import json
import csv
import pandas as pd
from datetime import datetime

def export_to_csv(json_file_path="jobs_extracted.json", csv_file_path="rpa_jobs_analysis.csv"):
    """
    Xu·∫•t d·ªØ li·ªáu t·ª´ JSON sang CSV v·ªõi c√°c tr∆∞·ªùng ƒë√£ ƒë·ªãnh nghƒ©a
    """
    
    # ƒê·ªçc d·ªØ li·ªáu t·ª´ file JSON
    try:
        with open(json_file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
    except FileNotFoundError:
        print(f"Kh√¥ng t√¨m th·∫•y file {json_file_path}")
        return
    except json.JSONDecodeError:
        print(f"L·ªói ƒë·ªçc file JSON {json_file_path}")
        return
    
    if not data:
        print("Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ xu·∫•t")
        return
    
    # ƒê·ªãnh nghƒ©a c√°c tr∆∞·ªùng theo y√™u c·∫ßu (th√™m c√°c tr∆∞·ªùng theo d√µi)
    fieldnames = [
        "STT",
        "URL_goc", 
        "Trang_web",
        "Trang_thai",
        "Thoi_gian_crawl",
        "Li√™n h·ªá",
        "Ng√†y ƒëƒÉng", 
        "Ng√†y h·∫øt h·∫°n",
        "NƒÇM",
        "ƒê∆°n v·ªã tuy·ªÉn d·ª•ng",
        "Lƒ©nh v·ª±c",
        "V·ªã tr√≠",
        "S·ªë l∆∞·ª£ng tuy·ªÉn",
        "N∆°i l√†m vi·ªác",
        "M√¥ t·∫£",
        "M√¥ t·∫£ y√™u c·∫ßu c√¥ng vi·ªác (chu·∫©n ho√° m√¥ t·∫£,‚Ä¶)",
        "Ki·∫øn th·ª©c",
        "Ki·∫øn th·ª©c (chu·∫©n ho√° m√¥n g√¨,‚Ä¶)",
        "Ki·∫øn th·ª©c v·ªÅ H·ªá ƒëi·ªÅu h√†nh (Windows, Linux, MacOS,‚Ä¶) Unix",
        "Ki·∫øn th·ª©c v·ªÅ C∆° s·ªü d·ªØ li·ªáu (MySQL, Postgrespl, SQL Server,...) Oracle, MsSQL, APAC, NoSQL",
        "Ng√¥n ng·ªØ l·∫≠p tr√¨nh cƒÉn b·∫£n (C, C++,...) Java",
        "Ng√¥n ng·ªØ l·∫≠p tr√¨nh n√¢ng cao (.NET, C#, Python,...) Ruby, VBScript, VB.Net VBA",
        "Ng√¥n ng·ªØ l·∫≠p tr√¨nh Web (HTML, DOM, Xpath, CSS, Javascript,...) Ui Element, MVC, ASP.NET",
        "T√≠ch h·ª£p h·ªá th·ªëng (Web Services, AWS, JSON, XML,...) APIs",
        "M·ªôt s·ªë c√¥ng ngh·ªá m·ªõi n·ªïi (AI, Big Data, Blockchain, RFID, IoT,‚Ä¶) BI Tool, ƒê√°m m√¢y(Azure, M√°y ·∫£o), ML",
        "M·ªôt s·ªë c√¥ng ngh·ªá t·ª± ƒë·ªông h√≥a (Selenium, UiPath, SAP iRPA, RPA, Power Automation, Blue Prism, Automation Anywhere,‚Ä¶)",
        "Qu·∫£n l√Ω d·ª± √°n (Agile, Scrum, Git,...) Kanban, BA, BPM, Jira",
        "K·ªπ nƒÉng",
        "K·ªπ nƒÉng (chu·∫©n ho√° k·ªπ nƒÉng g√¨,‚Ä¶)",
        "Ngo·∫°i ng·ªØ ti·∫øng Anh",
        "Ngo·∫°i ng·ªØ kh√°c (Nh·∫≠t, Trung, Ph√°p,...)",
        "K·ªπ nƒÉng m·ªÅm (Giao ti·∫øp, l√†m vi·ªác c·ªông t√°c,‚Ä¶)",
        "Th√°i ƒë·ªô",
        "Th√°i ƒë·ªô (chu·∫©n ho√° th√°i ƒë·ªô g√¨)",
        "Th√°i ƒë·ªô (c√≥ tinh th·∫ßn c·∫ßu ti·ªÅn, tu√¢n th·ªß k·ª∑ lu·∫≠t,..)",
        "Kinh nghi·ªám",
        "Kinh nghi·ªám (chu·∫©n ho√° kinh nghi·ªám g√¨)",
        "Kh√°c",
        "Kh√°c (chu·∫©n ho√°)",
        "B·∫±ng c·∫•p ƒë√∫ng chuy√™n m√¥n (CNTT, HTTTQL, HTTT,‚Ä¶)",
        "C√≥ ch·ª©ng ch·ªâ li√™n quan ƒë·∫øn RPA (UiPath, Blue Prism, Power BI,...)",
        "C√≥ kinh nghi·ªám li√™n quan ƒë·∫øn T·ª± ƒë·ªông h√≥a",
        "Kinh nghi·ªám l√†m vi·ªác",
        "Thu nh·∫≠p & Quy·ªÅn l·ª£i",
        "Thu nh·∫≠p & quy·ªÅn l·ª£i (chu·∫©n ho√°)",
        "H√¨nh th·ª©c l√†m vi·ªác"
    ]
    
    # T·∫°o d·ªØ li·ªáu cho CSV
    csv_data = []
    for job in data:
        row = {}
        for field in fieldnames:
            # L·∫•y gi√° tr·ªã t·ª´ JSON, n·∫øu kh√¥ng c√≥ th√¨ ghi N/A
            row[field] = job.get(field, "N/A")
        csv_data.append(row)
    
    # Ghi file CSV
    try:
        with open(csv_file_path, 'w', newline='', encoding='utf-8-sig') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            writer.writeheader()
            writer.writerows(csv_data)
        print(f"‚úÖ ƒê√£ xu·∫•t {len(csv_data)} b·∫£n ghi ra file {csv_file_path}")
        
        # T·∫°o file Excel n·∫øu c√≥ pandas
        try:
            df = pd.DataFrame(csv_data)
            excel_file = csv_file_path.replace('.csv', '.xlsx')
            df.to_excel(excel_file, index=False, engine='openpyxl')
            print(f"‚úÖ ƒê√£ xu·∫•t file Excel: {excel_file}")
        except ImportError:
            print("üí° ƒê·ªÉ xu·∫•t file Excel, h√£y c√†i: pip install pandas openpyxl")
            
    except Exception as e:
        print(f"‚ùå L·ªói khi ghi file CSV: {e}")

if __name__ == "__main__":
    export_to_csv()

